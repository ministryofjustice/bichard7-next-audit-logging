version: 2.1

jobs:
  build:
    docker:
      - image: cimg/node:16.13.1
    working_directory: ~
    steps:
      - checkout

      # Load dependencies from the cache if they exist and haven't changed
      - restore_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/shared/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/shared-types/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/shared-testing/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/lambdas/retrieve-event-from-s3/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/lambdas/translate-event/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/lambdas/record-event/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/message-receiver/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/transfer-messages/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/event-handler/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/incoming-message-handler/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/audit-log-api/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/audit-log-portal/package-lock.json" }}
      
      - run: make install

      - run: make validate

      - run: make build-all

      - run:
          name: Build Portal Stories
          command: cd src/audit-log-portal && npm run build-storybook && cd -

      # Update the cache with the latest installed dependencies to speed up future installs
      - save_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
          paths: node_modules

      - save_cache:
          key: v1-npm-deps-{{ checksum "src/shared/package-lock.json" }}
          paths: src/shared/node_modules

      - save_cache:
          key: v1-npm-deps-{{ checksum "src/shared-types/package-lock.json" }}
          paths: src/shared/node_modules

      - save_cache:
          key: v1-npm-deps-{{ checksum "src/shared-testing/package-lock.json" }}
          paths: src/shared-testing/node_modules

      - save_cache:
          key: v1-npm-deps-{{ checksum "src/lambdas/retrieve-event-from-s3/package-lock.json" }}
          paths: src/lambdas/retrieve-event-from-s3/node_modules

      - save_cache:
          key: v1-npm-deps-{{ checksum "src/lambdas/translate-event/package-lock.json" }}
          paths: src/lambdas/translate-event/node_modules

      - save_cache:
          key: v1-npm-deps-{{ checksum "src/lambdas/record-event/package-lock.json" }}
          paths: src/lambdas/record-event/node_modules

      - save_cache:
          key: v1-npm-deps-{{ checksum "src/message-receiver/package-lock.json" }}
          paths: src/message-receiver/node_modules

      - save_cache:
          key: v1-npm-deps-{{ checksum "src/transfer-messages/package-lock.json" }}
          paths: src/transfer-messages/node_modules

      - save_cache:
          key: v1-npm-deps-{{ checksum "src/event-handler/package-lock.json" }}
          paths: src/event-handler/node_modules

      - save_cache:
          key: v1-npm-deps-{{ checksum "src/incoming-message-handler/package-lock.json" }}
          paths: src/incoming-message-handler/node_modules

      - save_cache:
          key: v1-npm-deps-{{ checksum "src/audit-log-api/package-lock.json" }}
          paths: src/audit-log-api/node_modules

      - save_cache:
          key: v1-npm-deps-{{ checksum "src/audit-log-portal/package-lock.json" }}
          paths: src/audit-log-portal/node_modules

      # Persist all dist/build folders to the workspace to reduce build time later
      - persist_to_workspace:
          root: .
          paths:
            - src/shared/dist
            - src/shared-types/dist
            - src/shared-testing/dist
            - src/lambdas/retrieve-event-from-s3/build
            - src/lambdas/translate-event/build
            - src/lambdas/record-event/build
            - src/message-receiver/build
            - src/transfer-messages/build
            - src/event-handler/build
            - src/incoming-message-handler/build
            - src/audit-log-api/build
            - src/audit-log-portal/.next

  test:
    machine:
      image: ubuntu-2004:202104-01
      docker_layer_caching: true
    resource_class: large
    working_directory: ~
    steps:
      - checkout

      - attach_workspace:
          at: .

      # Restore any cached dependencies for the projects to reduce install time
      - restore_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/shared/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/shared-types/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/shared-testing/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/lambdas/retrieve-event-from-s3/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/lambdas/translate-event/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/lambdas/record-event/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/message-receiver/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/transfer-messages/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/event-handler/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/incoming-message-handler/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/audit-log-api/package-lock.json" }}

      - restore_cache:
          key: v1-npm-deps-{{ checksum "src/audit-log-portal/package-lock.json" }}

      - run:
          name: Installing Nodejs version in .nvmrc
          command: nvm install

      - run:
          name: Installing all
          command: nvm use && ./scripts/install-all.sh

      # Attach the workspace to retrieve the dist/build folders so we don't have to rebuild
      - attach_workspace:
          at: .

      - run:
          name: Install Java
          command: sudo apt-get update && sudo apt-get install openjdk-17-jre

      - run:
          name: Install Dynamo
          command: make -C ./src/audit-log-api install-dynamo

      - run:
          name: Start Audit Log API
          command: nvm use && make run-api
          background: true

      - run:
          name: Wait for Audit Log API
          command: cd src/audit-log-api && npm run wait-for-api

      - run:
          name: Running unit, integration, and end-to-end tests
          command: nvm use && make test

      - store_test_results:
          path: ./src/shared-types/test-results/jest/
      - store_test_results:
          path: ./src/shared/test-results/jest/
      - store_test_results:
          path: ./src/shared-testing/test-results/jest/
      - store_test_results:
          path: ./src/lambdas/retrieve-event-from-s3/test-results/jest/
      - store_test_results:
          path: ./src/lambdas/translate-event/test-results/jest/
      - store_test_results:
          path: ./src/lambdas/record-event/test-results/jest/
      - store_test_results:
          path: ./src/message-receiver/test-results/jest/
      - store_test_results:
          path: ./src/transfer-messages/test-results/jest/
      - store_test_results:
          path: ./src/event-handler/test-results/jest/
      - store_test_results:
          path: ./src/incoming-message-handler/test-results/jest/
      - store_test_results:
          path: ./src/audit-log-api/test-results/jest/
      - store_test_results:
          path: ./src/audit-log-portal/test-results/jest/

      - run:
          name: Installing Cypress
          command: ./.circleci/scripts/install-cypress.sh

      - run:
          name: Running UI tests
          command: cd ./audit-log-portal && npm run test:ui && cd -

      - store_artifacts:
          path: ./src/audit-log-portal/cypress/videos
      - store_artifacts:
          path: ./src/audit-log-portal/cypress/screenshots

workflows:
  version: 2
  build-and-test:
    jobs:
      - build
      - test:
          requires:
            - build
