service: audit-log-api
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  timeout: 200
  environment:
    AWS_URL: http://localhost:8000
    DYNAMO_REGION: eu-west-2
    AUDIT_LOG_TABLE_NAME: auditLogTable
    AUDIT_LOG_LOOKUP_TABLE_NAME: auditLogLookupTable
    MQ_USER: admin
    MQ_PASSWORD: admin
    MQ_URL: failover:(stomp://localhost:51613)
    INTERNAL_INCOMING_MESSAGES_BUCKET: internalIncomingBucket
    AUDIT_LOG_EVENTS_BUCKET: auditLogEventsBucket
    S3_URL: http://localhost:4569
    S3_REGION: eu-west-2
    API_URL: http://localhost:3010
    API_KEY: dummy
    S3_AWS_ACCESS_KEY_ID: S3RVER
    S3_AWS_SECRET_ACCESS_KEY: S3RVER
    DYNAMO_AWS_ACCESS_KEY_ID: S3RVER
    DYNAMO_AWS_SECRET_ACCESS_KEY: S3RVER
    DB_HOST: "localhost"
    DB_PORT: "5432"
    DB_USER: "bichard"
    DB_PASSWORD: "password"
    DB_TABLE_NAME: "archive_error_list"
    DB_SSL: "false"
    DB_NAME: "bichard"
    DB_SCHEMA: "br7own"

plugins:
  - serverless-offline
  - serverless-hooks
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-s3-local

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
  s3:
    host: 0.0.0.0
    directory: /tmp
  serverless-hooks:
    hookPrefix: hook
    runAllOptions:
      stderr: true
      stdout: true
      stdin: true

resources:
  Resources:
    auditLogEventsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: auditLogEventsBucket
    externalIncomingBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: externalIncomingBucket
    internalIncomingBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: internalIncomingBucket
    auditLogTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: auditLogTable
        AttributeDefinitions:
          - AttributeName: messageId
            AttributeType: S
          - AttributeName: _
            AttributeType: S
          - AttributeName: receivedDate
            AttributeType: S
          - AttributeName: externalCorrelationId
            AttributeType: S
          - AttributeName: messageHash
            AttributeType: S
          - AttributeName: status
            AttributeType: S
          - AttributeName: caseId
            AttributeType: S
          - AttributeName: isSanitised
            AttributeType: N
          - AttributeName: nextSanitiseCheck
            AttributeType: S
        KeySchema:
          - AttributeName: messageId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: receivedDateIndex
            KeySchema:
              - AttributeName: _
                KeyType: HASH
              - AttributeName: receivedDate
                KeyType: RANGE
            Projection:
              ProjectionType: "ALL"
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: externalCorrelationIdIndex
            KeySchema:
              - AttributeName: externalCorrelationId
                KeyType: HASH
            Projection:
              ProjectionType: "ALL"
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: messageHashIndex
            KeySchema:
              - AttributeName: messageHash
                KeyType: HASH
            Projection:
              ProjectionType: "ALL"
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: statusIndex
            KeySchema:
              - AttributeName: status
                KeyType: HASH
              - AttributeName: receivedDate
                KeyType: RANGE
            Projection:
              ProjectionType: "ALL"
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: caseIdIndex
            KeySchema:
              - AttributeName: caseId
                KeyType: HASH
            Projection:
              ProjectionType: "ALL"
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: isSanitisedIndex
            KeySchema:
              - AttributeName: isSanitised
                KeyType: HASH
              - AttributeName: nextSanitiseCheck
                KeyType: RANGE
            Projection:
              ProjectionType: "ALL"
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    auditLogLookupTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: auditLogLookupTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: messageId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: messageIdIndex
            KeySchema:
              - AttributeName: messageId
                KeyType: HASH
            Projection:
              ProjectionType: "ALL"
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

functions:
  getMessages:
    handler: src/handlers/getMessages.default
    events:
      - httpApi:
          path: /messages
          method: get
  getMessage:
    handler: src/handlers/getMessages.default
    events:
      - httpApi:
          path: /messages/{messageId}
          method: get
  createAuditLog:
    handler: src/handlers/createAuditLog.default
    events:
      - httpApi:
          path: /messages
          method: post
  createAuditLogs:
    handler: src/handlers/createAuditLogs.default
    events:
      - httpApi:
          path: /manyMessages
          method: post
  getEvents:
    handler: src/handlers/getEvents.default
    events:
      - httpApi:
          path: /messages/{messageId}/events
          method: get
  createAuditLogEvent:
    handler: src/handlers/createAuditLogEvent.default
    events:
      - httpApi:
          path: /messages/{messageId}/events
          method: post
  createAuditLogEvents:
    handler: src/handlers/createAuditLogEvents.default
    events:
      - httpApi:
          path: /messages/{messageId}/manyEvents
          method: post
  retryMessage:
    handler: src/handlers/retryMessage.default
    events:
      - httpApi:
          path: /messages/{messageId}/retry
          method: post
  sanitiseMessage:
    handler: src/handlers/sanitiseMessage.default
    events:
      - httpApi:
          path: /messages/{messageId}/sanitise
          method: post
